export interface CurrentTime {
    dayHourMinuteSecond: DayHourMinuteSecond;
    day: number;
    hourMinuteSecond: HourMinuteSecond;
    hour: number;
    minuteSecond: MinuteSecond;
    minute: number;
    second: number;
}
export interface DayHourMinuteSecond {
    days: number;
    hours: number;
    minutes: number;
    seconds: number;
    milliseconds: number;
}
export interface HourMinuteSecond {
    hours: number;
    minutes: number;
    seconds: number;
    milliseconds: number;
}
export interface MinuteSecond {
    minutes: number;
    seconds: number;
    milliseconds: number;
}
export interface UseCountDownOptions {
    time: number;
    millisecond?: boolean;
    onChange?: (current: CurrentTime) => void;
    onFinish?: () => void;
}
export declare const parseTime: (time: number) => CurrentTime;
export declare const useCountDown: (options: UseCountDownOptions) => {
    start: () => void;
    pause: () => void;
    reset: (totalTime?: number) => void;
    current: import("vue").ComputedRef<CurrentTime>;
};
